# Excel複数ファイル データ抽出・転記システム 要件定義書

## 1. プロジェクト概要

### 1.1 システム名
Excel複数ファイル データ抽出・転記システム

### 1.2 目的
同一フォーマットの複数Excelファイル（最大200枚）から指定したセルの値を抽出し、1つのファイルに転記・集約することで、データ分析・管理業務の効率化を図る。

### 1.3 システム概要
- **対象ファイル**: 同一フォーマットのExcelファイル（0～200枚）
- **処理内容**: 各ファイルから指定した複数セルの値を抽出
- **出力形式**: 抽出したデータを1行にまとめ、ファイル数分の行データとして出力
- **実装方式**: Excel VBA（マクロ）

## 2. 前提条件

### 2.1 システム環境
- Microsoft Excel 2016以降
- Windows OS（Windows 10以降推奨）

### 2.2 事前準備
転記先のExcelファイルに以下のシートを事前に作成しておく必要がある：
- **フォーマットシート**: 転記元ファイルと同一レイアウトのシート
- **マスタシート**: 処理対象ファイルの情報を記載するシート

### 2.3 制約事項
- 転記元ファイルは全て同一フォーマットであること
- 処理対象ファイル数は最大200枚まで
- エンドユーザーのITスキルレベルは低いことを前提とした設計

## 3. 機能要件

### 3.1 ファイル読み込み機能

#### 3.1.1 基本仕様
- 複数のExcelファイルを一括で読み込む
- 対応ファイル形式：.xlsx, .xls
- マスタシートに記載されたファイル情報に基づいて処理

#### 3.1.2 ファイル指定方法
- マスタシートに以下の情報を記載：
  - ファイル名（拡張子を含む）
  - フォルダパス（絶対パス・相対パスの両方に対応）
- サブフォルダ内のファイルにも対応可能な設計

#### 3.1.3 ソート機能
- ファイル名の昇順・降順でのソート機能を実装

### 3.2 セル指定機能

#### 3.2.1 指定方法
- フォーマットシートの転記対象セルに識別子を直接入力
- 識別子形式：「TENKI01」「TENKI02」「TENKI03」等
- 識別子の番号は連続している必要はない（飛び番可能）

#### 3.2.2 転記順序
- 識別子の番号順（TENKI01、TENKI02...）で転記先の列順序を決定

### 3.3 データ抽出機能

#### 3.3.1 基本処理
- 各転記元ファイルから識別子が設定されたセルの値を抽出
- 数式が入力されているセルは計算結果の値を抽出
- データ型の自動判定（文字列、数値、日付等）

#### 3.3.2 特殊セルの処理
- **結合セル**: 結合セルの値も正常に抽出
- **空白セル**: 空白として処理（空文字列として扱う）
- **エラーセル**: #DIV/0!、#VALUE!等のエラー値は文字列として抽出

#### 3.3.3 日付データ
- 元のファイルの表示形式を維持（統一しない）

### 3.4 データ転記機能

#### 3.4.1 転記方法
- 1ファイルのデータを1行として転記
- ファイル数分の行を生成
- 転記開始行：3行目から（1-2行目は空白またはタイトル用）

#### 3.4.2 新規シート作成
- 転記先ファイルに新規シートを作成して出力
- シート名：実行日時を含む名前（例：「転記結果_20240115_1430」）

### 3.5 出力機能

#### 3.5.1 ファイル保存
- 出力ファイル名：実行時に指定
- 出力形式：Excel（.xlsx）を基本とし、CSV出力もオプションで対応
- 既存ファイルへの保存時は上書き確認ダイアログを表示

### 3.6 ユーザーインターフェース

#### 3.6.1 操作画面
- シンプルで直感的な操作画面（UserForm）を提供
- 主要な操作ボタン：
  - 「実行」ボタン
  - 「キャンセル」ボタン
  - 「設定確認」ボタン

#### 3.6.2 進捗表示
- 処理中の進捗状況をプログレスバーで表示
- 現在処理中のファイル名を表示

### 3.7 エラーハンドリング

#### 3.7.1 エラー検出
- ファイルが見つからない場合
- ファイル形式が異なる場合
- アクセス権限がない場合
- フォーマットが一致しない場合

#### 3.7.2 エラー処理
- エラー発生時は分かりやすいメッセージを表示
- 処理を継続するか中断するかを選択可能
- エラーログをテキストファイルに出力

### 3.8 ログ機能

#### 3.8.1 処理ログ
- 処理開始・終了時刻
- 処理したファイル数
- エラー発生件数
- 処理時間

#### 3.8.2 ログ出力
- ログファイルは転記先ファイルと同じフォルダに保存
- ファイル名：「処理ログ_YYYYMMDD_HHMMSS.txt」

## 4. 操作手順

### 4.1 事前準備
1. 転記先Excelファイルを作成
2. 「フォーマット」シートを作成し、転記元と同じレイアウトを再現
3. 転記したいセルに「TENKI01」等の識別子を入力
4. 「マスタ」シートを作成し、処理対象ファイルの情報を記載

### 4.2 実行手順
1. 転記先Excelファイルを開く
2. マクロを実行（リボンのボタンまたはショートカットキー）
3. 確認ダイアログで設定内容を確認
4. 「実行」ボタンをクリック
5. 処理完了後、結果を確認

## 5. 保守性への配慮

### 5.1 コード設計
- モジュール単位で機能を分割
- 処理ごとに関数・サブルーチンを作成
- 変数名・関数名は日本語コメント付きで分かりやすく命名

### 5.2 設定の外部化
- 固定値は定数として定義
- 設定値は設定シートまたは設定ファイルで管理

### 5.3 ドキュメント
- ソースコード内に詳細なコメントを記載
- 別途、システム管理者向けマニュアルを作成

## 6. 拡張性

### 6.1 将来的な機能追加への対応
- 転記元ファイルの形式追加（CSV等）
- 複数シートからの転記
- 条件付き転記（特定の条件を満たすデータのみ転記）
- データの集計機能

### 6.2 他システムとの連携
- Power Automate Desktopとの連携を考慮した設計
- 外部データベースへの出力機能の追加余地を確保

## 7. 制限事項

### 7.1 性能面
- 200ファイルを超える場合は処理時間が大幅に増加する可能性がある
- 1ファイルあたりの転記セル数が多い場合、メモリ使用量が増加

### 7.2 機能面
- 転記元ファイルのフォーマットは全て同一である必要がある
- 画像やグラフなどのオブジェクトは転記対象外
- マクロの実行にはExcelのセキュリティ設定の変更が必要

## 8. 納品物

### 8.1 システム本体
- VBAマクロを含むExcelファイル（.xlsm）
- テンプレートファイル（フォーマット・マスタシートを含む）

### 8.2 ドキュメント
- ユーザーマニュアル（操作手順書）
- システム管理者マニュアル
- トラブルシューティングガイド

### 8.3 サンプルデータ
- 動作確認用のサンプルファイル一式
- 設定例